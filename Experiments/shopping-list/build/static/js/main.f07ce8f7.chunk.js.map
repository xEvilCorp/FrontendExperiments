{"version":3,"sources":["helpers/CurrencyConverter.js","components/ShoppingListItemCard/index.js","App.js","index.js"],"names":["toCurrencyBRL","number","Intl","NumberFormat","style","currency","format","ShoppingListItemCard","item","className","src","imageUrl","alt","name","price","sellingPrice","App","useState","shoppingListItems","setShoppingListItems","shoppingListTotal","setShoppingListTotal","loadList","path","url","axios","get","then","response","data","value","itemsInfo","items","itemMetadata","map","x","Object","assign","find","y","id","onClick","i","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAAO,SAASA,EAAcC,GAE1B,OADuB,IAAIC,KAAKC,aAAa,QAAS,CAAEC,MAAO,WAAYC,SAAU,QAC/DC,OAAOL,EAAO,K,WCiBzBM,MAff,YAAyC,IAATC,EAAQ,EAARA,KAC5B,OACI,0BAASC,UAAU,YAAnB,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKC,IAAKF,EAAKG,SAAUC,IAAI,OAEjC,0BAASH,UAAU,iBAAnB,UACI,oBAAIA,UAAU,YAAd,SAA2BD,EAAKK,OAChC,mBAAGJ,UAAU,aAAb,SAA2BT,EAAcQ,EAAKM,SAC9C,mBAAGL,UAAU,qBAAb,SAAmCT,EAAcQ,EAAKO,uB,yBCyDvDC,MAhEf,WAAgB,IAAD,EAEqCC,mBAAS,IAF9C,mBAENC,EAFM,KAEaC,EAFb,OAGqCF,mBAAS,IAH9C,mBAGNG,EAHM,KAGaC,EAHb,KASPC,EAAW,SAACC,GAChB,IAAMC,EAAM,yGAA0GD,EAAM,QAE5HE,IAAMC,IAAIF,GAAKG,MAAK,SAAAC,GAChB,IAAIC,EAAOD,EAASC,KACpBR,EAAqBQ,EAAKC,OAC1B,IAAIC,EAAYF,EAAKG,MAEjBA,EADgBH,EAAKI,aAAaD,MACZE,KAAI,SAAAC,GAAC,OAAIC,OAAOC,OAAOF,EAAGJ,EAAUO,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOL,EAAEK,UACnFrB,EAAqBa,OAK3B,OACE,sBAAKvB,UAAU,MAAf,UACA,yBAAQA,UAAU,aAAlB,UACE,wBAAQgC,QAAS,kBAAMnB,EAAS,oBAAhC,4BAGA,wBAAQmB,QAAS,kBAAMnB,EAAS,mBAAhC,8BAIF,iCAEE,oBAAIkB,GAAG,QAAP,0BACA,uBAEA,yBAASA,GAAG,aAAZ,SACGtB,EAAkBgB,KAAI,SAAC1B,EAAMkC,GAC5B,OAAO,cAAC,EAAD,CAA8BlC,KAAMA,GAATkC,QAItC,uBAEA,sBAAKF,GAAG,cAAR,UACE,sCAAY,mBAAGA,GAAG,QAAN,SAAexC,EAAcoB,QAG1CA,EAAkB,IAAM,IACvB,qBAAKX,UAAU,cAAf,SACE,gFAIJ,uBAEA,wBAAQ+B,GAAG,kBAAX,qCC5DNG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f07ce8f7.chunk.js","sourcesContent":["export function toCurrencyBRL(number) {\r\n    const currencyFormat = new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' });\r\n    return currencyFormat.format(number/100);\r\n}\r\n\r\n","import React from 'react';\r\nimport './style.css';\r\nimport { toCurrencyBRL } from '../../helpers/CurrencyConverter.js';\r\n\r\nfunction ShoppingListItemCard({ item }) {\r\n    return (\r\n        <article className=\"item-card\">\r\n            <div className=\"item-image\">\r\n                <img src={item.imageUrl} alt=\"\"/>\r\n            </div>\r\n            <section className=\"item-card-info\">\r\n                <h3 className=\"item-name\">{item.name}</h3>\r\n                <p className=\"item-price\">{toCurrencyBRL(item.price)}</p>\r\n                <p className=\"item-selling-price\">{toCurrencyBRL(item.sellingPrice)}</p>\r\n            </section>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default ShoppingListItemCard;\r\n","import React, { useState } from 'react';\nimport ShoppingListItemCard from './components/ShoppingListItemCard';\nimport { toCurrencyBRL } from './helpers/CurrencyConverter.js';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n\n  const [shoppingListItems, setShoppingListItems] = useState([])\n  const [shoppingListTotal, setShoppingListTotal] = useState([])\n\n\n  //Requires the api/json filename.\n  //After fetching the request, it sets the shoppingListItems and the shoppingListTotal variables.\n  //The shoppingListItems includes the product metadata(eg. imageUrl) as it's merged.\n  const loadList = (path) => {\n    const url = \"https://raw.githubusercontent.com/xEvilCorp/FrontendExperiments/master/Experiments/shopping-list/host/\"+ path +\".json\";\n\n    axios.get(url).then(response => {\n        let data = response.data;\n        setShoppingListTotal(data.value);\n        let itemsInfo = data.items;\n        let itemsMetadata = data.itemMetadata.items;\n        let items = itemsMetadata.map(x => Object.assign(x, itemsInfo.find(y => y.id === x.id)));\n        setShoppingListItems(items);\n    });\n  }\n\n\n  return (\n    <div className=\"app\">\n    <header className=\"app-header\">\n      <button onClick={() => loadList(\"abaixo-10-reais\")}>\n        ABAIXO DE R$10\n      </button>\n      <button onClick={() => loadList(\"acima-10-reais\")}>\n        ACIMA DE R$10\n      </button>\n    </header>\n    <main>\n\n      <h1 id=\"title\">Meu carrinho</h1>\n      <hr/>\n\n      <section id=\"items-list\">\n        {shoppingListItems.map((item, i) => {\n          return <ShoppingListItemCard key={i} item={item} />\n        })}\n      </section>\n      \n      <hr/>\n\n      <div id=\"totals-info\">\n        <p>Total</p><p id=\"total\">{toCurrencyBRL(shoppingListTotal)}</p>\n      </div>\n\n      {shoppingListTotal/100 > 10 &&\n        <div className=\"green-alert\">\n          <p>Parabéns, sua compra tem frete grátis !</p>\n        </div>\n      }\n\n      <hr/>\n\n      <button id=\"finalize-button\">Finalizar compra</button>\n    </main>\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}